@using SELearning.Core

@inject HttpClient Http

<section class="comment-list container-fluid"> <!-- NOTE: I am not sure the it is necessary to have container fluid... but i am using it just to be sure that this 'component' looks good if no container is supplied -->
    <div class="row">
        <!-- Comment section header-->
        <h3>All Content</h3>
    </div>
    <div class="row">
        <!-- List of content -->
        @foreach(Content content in _contentList)
        {
            <CommentTile Content="@content" OnContentDeleted="@OnContentDeleted"/>
        }
    </div>
    @* <div class="row">
        <!-- Comment section -->
        <EditForm class="col-lg-12" Model="@_content" OnValidSubmit="@PostContent">
            <div class="form-group">
                <InputTextArea @bind-Value="_content.Content" class="form-control" rows="3"/>
            </div>
            <div class="form-group col-lg-3 col-lg-offset-9">
                <button class="btn btn-primary" type="submit">Post content</button>
            </div>
        </EditForm>
    </div> *@
</section>

@code{
    [Parameter]
    public string ContentId { get; set; }

    private Content _content = new();

    private IList<Content> _contentList;
    
    protected override void OnInitialized()
    {
        _contentList = new List<Content>()
        {
            new Content { Author = "Asger", Title = "How to code in C#", Description = "This is a video about C#", VideoLink = "wwww.selearning.com", Rating = 3 },
            new Content { Author = "Asger", Title = "How to code in C#", Description = "This is a video about C#", VideoLink = "wwww.selearning.com", Rating = 3 },
            new Content { Author = "Asger", Title = "How to code in C#", Description = "This is a video about C#", VideoLink = "wwww.selearning.com", Rating = 3 },
            new Content { Author = "Asger", Title = "How to code in C#", Description = "This is a video about C#", VideoLink = "wwww.selearning.com", Rating = 3 },
        };
    }

    @* private void PostComment()
    {
        System.Console.WriteLine("Posting comment...");
        System.Console.WriteLine($"{_comment.Content}, {_comment.Author}");

        _comments.Add(_comment); // only add if the 
        _comment = new();
    } *@

    private void OnContentDeleted(Content content)
    {
        System.Console.WriteLine($"Comment from {content.Author} is deleted!");
        _contentList.Remove(content);
    }

}