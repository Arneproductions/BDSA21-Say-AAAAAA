@using SELearning.Core.Comment

@inject HttpClient Http

<section class="comment-list container-fluid"> <!-- NOTE: I am not sure the it is necessary to have container fluid... but i am using it just to be sure that this 'component' looks good if no container is supplied -->
    <div class="row">
        <!-- Comment section header-->
        <h3>Comments</h3>
    </div>
    <div class="row">
        <!-- List of comments -->
        @foreach(Comment comment in _comments)
        {
            <CommentTile Comment="@comment" OnCommentDeleted="@OnCommentDeleted"/>
        }
    </div>
    <div class="row">
        <!-- Comment section -->
        <EditForm class="col-lg-12" Model="@_comment" OnValidSubmit="@PostComment">
            <div class="form-group">
                <InputTextArea @bind-Value="_comment.Text" class="form-control" rows="3"/>
            </div>
            <div class="form-group col-lg-3 col-lg-offset-9">
                <button class="btn btn-primary" type="submit">Post comment</button>
            </div>
        </EditForm>
    </div>
</section>

@code{
    [Parameter]
    public string ContentId { get; set; }

    private Comment _comment = new();

    private IList<Comment> _comments;
    
    protected override void OnInitialized()
    {
        _comments = new List<Comment>()
        {
            new Comment{Text = "Hej Tietgen", Author = "Adrian", Rating = 0},
            new Comment{Text = "Hey Buddy!", Author = "Tietgen", Rating = 5155},
            new Comment{Text = "Skal vi lave noget arbejde? Kh. Head boi", Author = "Albert", Rating = 2},
            new Comment{Text = "Jeg er chefen!", Author = "Asger", Rating = 5241},
            new Comment{Text = "Nej nej! Hallo, jeg er chefen!", Author = "Joachim", Rating = 32},
            new Comment{Text = "Who run the world, girls! Jeg er chefen, bitches.", Author = "Amalie", Rating = 41},
            new Comment{Text = "Bla bla... lav nu bare nogle use cases!", Author = "Tietgen", Rating = 421},
            new Comment{Text = "Fed side vi har fået lavet hva", Author = "Arne4545", Rating = 412},
            new Comment{Text = "Det må man sige. Jeg er også meget tilfreds med den. Især den glimrende kode og det gode samarbejde, er jeg stolt af.", Author = "KongBorup", Rating = 333},
            new Comment{Text = "Nu glæder jeg mig bare til en juleferie, hvor jeg skal uploade vildt meget content omhandlende Blazor, Toast, Bootstrap, etc.", Author = "Amalie", Rating = 233213},
            new Comment{Text = "Dette kommentarspor er løbet løbsk, og jeg vil bare gerne arbejde hele natten.", Author = "Albert", Rating = -1241}
        };
    }

    private void PostComment()
    {
        System.Console.WriteLine("Posting comment...");
        System.Console.WriteLine($"{_comment.Text}, {_comment.Author}");

        _comments.Add(_comment); // only add if the 
        _comment = new();
    }

    private void OnCommentDeleted(Comment comment)
    {
        System.Console.WriteLine($"Comment from {comment.Author} is deleted!");
        _comments.Remove(comment);
    }
}
