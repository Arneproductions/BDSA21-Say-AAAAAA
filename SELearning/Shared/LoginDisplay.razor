@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject HttpClient Http
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        Hello, @context.User.Identity.Name! | Current Credibility: @UserCredibility.CurrentCredibility
        
        <button class="nav-link btn btn-link" @onclick="BeginLogout">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{

    private Credibility UserCredibility { get; set; } = new Credibility{CurrentCredibility = 0};
    
    protected override async void OnInitialized()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        if(authState.User.Identity.IsAuthenticated)
        {
            UserCredibility = await Http.GetFromJsonAsync<Credibility>("User/Me/Credibility");
            StateHasChanged();
        }
    }

    private async Task BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private class Credibility
    {
        public int CurrentCredibility { get; set; }
    }
}
