@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using SELearning.Core.Content
@using System.Net

@inject HttpClient _httpClient
@inject ToastService _toastService;

<div class="card content" style="width: 18rem;">
    <div class="card-body">
        <h5 class="card-title">@Content.Title</h5>
        <p class="card-text">@Content.Description</p>
    </div>
    <ul class="list-group list-group-flush">
        <li class="list-group-item">Author: @Content.Author.Name</li>
        <li class="list-group-item">Video link: @Content.VideoLink</li>
        <li class="list-group-item">Rating: @Content.Rating</li>
    </ul>
    <div class="card-body">
        <div class="btn-group">
            <a href='@($"/content/{Content.Id}")' class="btn btn-primary">View Content</a>
            <button @onclick="Delete" class="btn btn-default text-danger">Delete</button>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public ContentDTO Content { get; set; }

    [Parameter]
    public EventCallback<ContentDTO> OnContentDeleted { get; set; }

    private async Task Delete()
    {
        try
        {
            var uri = "content/" + Content.Id;
            var responseMessage = await _httpClient.DeleteAsync(uri);
            StateHasChanged();

            if (responseMessage.StatusCode == HttpStatusCode.Forbidden)
            {
                _toastService.AddToast(ToastNotification.CreateUnauthorized("delete content"));
                return;
            }
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

        if (OnContentDeleted.HasDelegate)
            await OnContentDeleted.InvokeAsync(Content);
    }

}
