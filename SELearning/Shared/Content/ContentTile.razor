@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using SELearning.Core.Content
@using System.Net
@inject HttpClient Http
@inject ToastService toasts;

<div class="card content" style="width: 18rem;">
  <div class="card-body">
    <h5 class="card-title">@content.Title</h5>
    <p class="card-text">@content.Description</p>
  </div>
  <ul class="list-group list-group-flush">
    <li class="list-group-item">Author: @content.Author.Name</li>
    <li class="list-group-item">Video link: @content.VideoLink</li>
    <li class="list-group-item">Rating: @content.Rating</li>
  </ul>
  <div class="card-body">
    <div class="btn-group">
        <a href='@string.Format("/content/{0}", content.Id)' class="btn btn-primary">View Content</a>
        <button @onclick="Delete" class="btn btn-default text-danger">Delete</button>
    </div>
  </div>
</div>

@code {

    [Parameter]
    public ContentDto content { get; set; }

    [Parameter]
    public EventCallback<ContentDto> OnContentDeleted { get; set; }

    private async Task Delete()
    {
      try
        {
          var uri = "content/" + content.Id;
          var responseMessage = await Http.DeleteAsync(uri);
          StateHasChanged();

          if (responseMessage.StatusCode == HttpStatusCode.Forbidden)
          {
            toasts.AddToast(ToastNotification.CreateUnauthorized("delete content"));
            return;
          }
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

        if(OnContentDeleted.HasDelegate)
          await OnContentDeleted.InvokeAsync(content);
    }
}