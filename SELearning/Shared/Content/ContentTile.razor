@using SELearning.Core.Content

<div class="card content" style="width: 18rem;">
  <div class="card-body">
    <h5 class="card-title">@content.Title</h5>
    <p class="card-text">@content.Description</p>
  </div>
  <ul class="list-group list-group-flush">
    <li class="list-group-item">Author: @content.Author</li>
    <li class="list-group-item">Video link: @content.VideoLink</li>
    <li class="list-group-item">Rating: @content.Rating</li>
  </ul>
  <div class="card-body">
    <div class="btn-group">
        <a href='@string.Format("/content/{0}", content.Id)' class="btn btn-primary">View Content</a>
        <button @onclick="Delete" class="btn btn-default text-danger">Delete</button>
    </div>
  </div>
</div>

@code {

    [Parameter]
    public ContentDto content { get; set; }

    [Parameter]
    public EventCallback<ContentDto> OnContentDeleted { get; set; }

    private async Task Delete()
    {
        // TODO: Delete comment with api

        // TODO: Check if return code is not an error

        if(OnContentDeleted.HasDelegate)
            await OnContentDeleted.InvokeAsync(content);
    }

    private Task UpVote()
    {
        // Call up vote api

        content.Rating++;

        return Task.CompletedTask;
    }

    private Task DownVote() 
    {
        // Call down vote api

        content.Rating--;

        return Task.CompletedTask;
    }
}