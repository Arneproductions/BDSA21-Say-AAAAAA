@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using SELearning.Core.Content

@inject HttpClient Http

<section class="comment-list container-fluid"> <!-- NOTE: I am not sure the it is necessary to have container fluid... but i am using it just to be sure that this 'component' looks good if no container is supplied -->
    <div class="row">
        <!-- List of comments -->
        @foreach(ContentDto content in forecasts)
        {
            <ContentTile Content="@content" OnContentDeleted="@OnContentDeleted"/>
        }
    </div>
</section>

@code{
    [Parameter]
    public string SectionId { get; set; }

    private ContentDto _content = new();

    private IList<Content> _allContent;
    
    private ContentDto[] forecasts = {};
    
    protected async override void OnInitialized()
    {
        await Generate();
    }

    protected async Task Generate()
    {
        try
        {
            await Http.GetAsync("Content");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

        await RetrieveForecasts();
    }

    private void OnContentDeleted(ContentDto content)
    {
        System.Console.WriteLine($"Comment from {content.Author} is deleted!");
        @* forecasts.Remove(content); *@
    }

    protected async Task RetrieveForecasts()
    {
        try
        {
            forecasts = await Http.GetFromJsonAsync<ContentDto[]>("Content");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

}