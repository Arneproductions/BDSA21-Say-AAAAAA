@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using SELearning.Core.Content

@inject HttpClient Http

<section class="comment-list container-fluid"> <!-- NOTE: I am not sure the it is necessary to have container fluid... but i am using it just to be sure that this 'component' looks good if no container is supplied -->
    <div class="row">
        <!-- List of comments -->
        @foreach(SectionDto sec in _sections)
        {
            <SectionTile Sec="@sec" OnDeleted="@OnSectionDeleted" />
        }
    </div>
</section>

@code{
    private List<SectionDto> _sections = new();

    protected async override void OnInitialized()
    {
        await RetrieveSections();
    }

    protected async Task RetrieveSections()
    {
        try
        {
            var sectionDtos = await Http.GetFromJsonAsync<IEnumerable<SectionDto>>("Section");
            _sections.AddRange(sectionDtos);
            StateHasChanged();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    void OnSectionDeleted(SectionDto deletedSection)
    {
        _sections.Remove(deletedSection);
        StateHasChanged();
    }
}